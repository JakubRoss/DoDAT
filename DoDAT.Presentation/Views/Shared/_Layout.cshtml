<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - DoDAT</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/DoDAT.Presentation.styles.css" asp-append-version="true" />

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: Montserrat, sans-serif;
        }

        .calendar {
            width: 100%;
            margin: 20px 0;
            border: 1px solid #ccc;
            border-radius: 5px;
            overflow: hidden;
        }

        .days {
            display: flex;
            background-color: #f9f9f9;
        }

        .day {
            flex: 1;
            padding: 10px;
            text-align: center;
        }

        .dates {
            display: flex;
            flex-wrap: wrap;
        }

        .date {
            width: calc(100% / 7);
            padding: 20px;
            text-align: center;
            border: 1px solid #eee;
            box-sizing: border-box;
            cursor: pointer;
        }

        .selected-date {
            background-color: #3F4341;
            color: white;
        }

        .header {
            text-align: center;
            padding: 20px; 
        }


        .header-title {
            font-size: 3rem; 
            font-weight: bold;
        }

    </style>
</head>

<body>
    <header class="header">
        <a href="/Home/Index">
            <h1 class="header-title">doDAT Lista</h1>
        </a>
    </header>
    <div class="d-flex justify-content-center align-items-center mt-xxl-5">
        <div class="container" style="padding: 5vh; border: 1px solid #ccc; border-radius: 10px;">
            <div class="row">
                <div class="col-md-4 ">
                    <div class="calendar">
                        <div class="d-flex justify-content-between align-items-center" style="min-height:100px;">
                            <button class="m-1" id="prev">≪</button>
                            <h2 id="month-year" class="mx-2"></h2>
                            <button class="m-1" id="next">≫</button>
                        </div>
                        <div class="days" style="background-color: #DDDFE2;">
                            <div class="day">Sun</div>
                            <div class="day">Mon</div>
                            <div class="day">Tue</div>
                            <div class="day">Wed</div>
                            <div class="day">Thu</div>
                            <div class="day">Fri</div>
                            <div class="day">Sat</div>
                        </div>
                        <div id="dates" class="dates"></div>
                    </div>
                </div>
                <div class="col-md-8 p-xxl-5">
                    <main role="main" class="pb-3">
                        @RenderBody()
                    </main>
                </div>
            </div>
        </div>
    </div>

    <footer class="border-top footer text-center">
        <div class="container">
            &copy; 2024 - DoDAT
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const monthYearElement = document.getElementById('month-year');
        const datesElement = document.getElementById('dates');
        const prevButton = document.getElementById('prev');
        const nextButton = document.getElementById('next');

        let date = new Date();
        let selectedDate = new URLSearchParams(window.location.search).get('selectedDate'); // Pobierz wybraną datę z URL

        function renderCalendar() {
            const year = date.getFullYear();
            const month = date.getMonth();

            monthYearElement.innerText = date.toLocaleString('default', { month: 'long', year: 'numeric' });

            const firstDay = new Date(year, month, 1).getDay();
            const totalDays = new Date(year, month + 1, 0).getDate();

            datesElement.innerHTML = '';

            // Dodaj puste divy dla dni tygodnia przed pierwszym dniem
            for (let i = 0; i < firstDay; i++) {
                datesElement.innerHTML += '<div class="date"></div>';
            }

            // Dodaj każdy dzień miesiąca
            for (let day = 1; day <= totalDays; day++) {
                // Sprawdź, czy ten dzień jest wybraną datą
                const currentDate = new Date(Date.UTC(year, month, day)).toISOString().split('T')[0]; // Format yyyy-mm-dd
                const isSelected = selectedDate === currentDate ? 'selected-date' : ''; // Ustal klasę CSS
                datesElement.innerHTML += `<div class="date ${isSelected}" onclick="sendDate(${year}, ${month}, ${day})">${day}</div>`;
            }
        }

        function sendDate(year, month, day) {
            const selectedDate = new Date(Date.UTC(year, month, day));
            const formattedDate = selectedDate.toISOString().split('T')[0]; // Format date as yyyy-mm-dd
            window.location.href = `/Home/Index?selectedDate=${formattedDate}`;
        }

        prevButton.addEventListener('click', () => {
            date.setMonth(date.getMonth() - 1);
            renderCalendar();
        });

        nextButton.addEventListener('click', () => {
            date.setMonth(date.getMonth() + 1);
            renderCalendar();
        });

        renderCalendar();
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
